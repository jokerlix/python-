In [1]: from sklearn import tree                                                                                

In [2]: from sklearn.datasets import load_wine                                                                  

In [3]: from sklearn.model_selection import train_test_split                                                    

In [4]: wine = load_wine()                                                                                      

In [5]: wine.data.shape                                                                                         
Out[5]: (178, 13)

In [6]: wine.target                                                                                             
Out[6]: 
array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
       2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
       2, 2])

In [7]: import pandas as pd                                                                                     

In [8]: pd.concat([pd.dataFrame(wine.data),pd.DataFrame(wine.target)],axis=1)                                   
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-8-48e98804ef02> in <module>
----> 1 pd.concat([pd.dataFrame(wine.data),pd.DataFrame(wine.target)],axis=1)

AttributeError: module 'pandas' has no attribute 'dataFrame'

In [9]: pd.concat([pd.DataFrame(wine.data),pd.DataFrame(wine.target)],axis=1)                                   
Out[9]: 
        0     1     2     3      4     5     6     7     8      9     10    11      12  0 
0    14.23  1.71  2.43  15.6  127.0  2.80  3.06  0.28  2.29   5.64  1.04  3.92  1065.0   0
1    13.20  1.78  2.14  11.2  100.0  2.65  2.76  0.26  1.28   4.38  1.05  3.40  1050.0   0
2    13.16  2.36  2.67  18.6  101.0  2.80  3.24  0.30  2.81   5.68  1.03  3.17  1185.0   0
3    14.37  1.95  2.50  16.8  113.0  3.85  3.49  0.24  2.18   7.80  0.86  3.45  1480.0   0
4    13.24  2.59  2.87  21.0  118.0  2.80  2.69  0.39  1.82   4.32  1.04  2.93   735.0   0
..     ...   ...   ...   ...    ...   ...   ...   ...   ...    ...   ...   ...     ...  ..
173  13.71  5.65  2.45  20.5   95.0  1.68  0.61  0.52  1.06   7.70  0.64  1.74   740.0   2
174  13.40  3.91  2.48  23.0  102.0  1.80  0.75  0.43  1.41   7.30  0.70  1.56   750.0   2
175  13.27  4.28  2.26  20.0  120.0  1.59  0.69  0.43  1.35  10.20  0.59  1.56   835.0   2
176  13.17  2.59  2.37  20.0  120.0  1.65  0.68  0.53  1.46   9.30  0.60  1.62   840.0   2
177  14.13  4.10  2.74  24.5   96.0  2.05  0.76  0.56  1.35   9.20  0.61  1.60   560.0   2

[178 rows x 14 columns]

In [10]: wine.feature_names                                                                                     
Out[10]: 
['alcohol',
 'malic_acid',
 'ash',
 'alcalinity_of_ash',
 'magnesium',
 'total_phenols',
 'flavanoids',
 'nonflavanoid_phenols',
 'proanthocyanins',
 'color_intensity',
 'hue',
 'od280/od315_of_diluted_wines',
 'proline']

In [11]: len(wine.feature_names)                                                                                
Out[11]: 13

In [12]: wine.target_names                                                                                      
Out[12]: array(['class_0', 'class_1', 'class_2'], dtype='<U7')

In [13]: Xtrain,Xtest,Ytrain,Ytest = train_test_split(wine.data,wine.target,test_size=0.3)                      

In [14]: Xtrain.shape                                                                                           
Out[14]: (124, 13)

In [15]: clf = tree.DecisionTreeClassifier(criterion="entropy")                                                 

In [16]: clf = clf.fit(Xtrain,Ytrain)                                                                           

In [17]: score = clf.score(Xtest,Ytest)                                                                         

In [18]: score                                                                                                  
Out[18]: 0.9814814814814815

In [19]: import graphviz                                                                                        

In [20]: dot_data = tree.export_graphviz(clf,feature_names=wine.feature_names,class_names=wine.target_names,fill
    ...: ed=True,rounded=True)                                                                                  

In [21]: graph = graphviz.Source(dot_data)                                                                      

In [22]: graph.render('Tree')                                                                                   
Out[22]: 'Tree.pdf'

In [23]: graph                                                                                                  
Out[23]: <graphviz.files.Source at 0x7fdcfb8e55c0>
